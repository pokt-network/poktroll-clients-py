"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import builtins
import cosmos.base.v1beta1.coin_pb2
import google.protobuf.descriptor
import google.protobuf.message
import pocket.proof.types_pb2
import typing

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing.final
class EventClaimCreated(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CLAIM_FIELD_NUMBER: builtins.int
    NUM_RELAYS_FIELD_NUMBER: builtins.int
    NUM_CLAIMED_COMPUTE_UNITS_FIELD_NUMBER: builtins.int
    NUM_ESTIMATED_COMPUTE_UNITS_FIELD_NUMBER: builtins.int
    CLAIMED_UPOKT_FIELD_NUMBER: builtins.int
    num_relays: builtins.int
    num_claimed_compute_units: builtins.int
    num_estimated_compute_units: builtins.int
    @property
    def claim(self) -> pocket.proof.types_pb2.Claim: ...
    @property
    def claimed_upokt(self) -> cosmos.base.v1beta1.coin_pb2.Coin: ...
    def __init__(
        self,
        *,
        claim: pocket.proof.types_pb2.Claim | None = ...,
        num_relays: builtins.int = ...,
        num_claimed_compute_units: builtins.int = ...,
        num_estimated_compute_units: builtins.int = ...,
        claimed_upokt: cosmos.base.v1beta1.coin_pb2.Coin | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["claim", b"claim", "claimed_upokt", b"claimed_upokt"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["claim", b"claim", "claimed_upokt", b"claimed_upokt", "num_claimed_compute_units", b"num_claimed_compute_units", "num_estimated_compute_units", b"num_estimated_compute_units", "num_relays", b"num_relays"]) -> None: ...

global___EventClaimCreated = EventClaimCreated

@typing.final
class EventClaimUpdated(google.protobuf.message.Message):
    """TODO_TEST: Add coverage for claim updates."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CLAIM_FIELD_NUMBER: builtins.int
    NUM_RELAYS_FIELD_NUMBER: builtins.int
    NUM_CLAIMED_COMPUTE_UNITS_FIELD_NUMBER: builtins.int
    NUM_ESTIMATED_COMPUTE_UNITS_FIELD_NUMBER: builtins.int
    CLAIMED_UPOKT_FIELD_NUMBER: builtins.int
    num_relays: builtins.int
    num_claimed_compute_units: builtins.int
    num_estimated_compute_units: builtins.int
    @property
    def claim(self) -> pocket.proof.types_pb2.Claim: ...
    @property
    def claimed_upokt(self) -> cosmos.base.v1beta1.coin_pb2.Coin: ...
    def __init__(
        self,
        *,
        claim: pocket.proof.types_pb2.Claim | None = ...,
        num_relays: builtins.int = ...,
        num_claimed_compute_units: builtins.int = ...,
        num_estimated_compute_units: builtins.int = ...,
        claimed_upokt: cosmos.base.v1beta1.coin_pb2.Coin | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["claim", b"claim", "claimed_upokt", b"claimed_upokt"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["claim", b"claim", "claimed_upokt", b"claimed_upokt", "num_claimed_compute_units", b"num_claimed_compute_units", "num_estimated_compute_units", b"num_estimated_compute_units", "num_relays", b"num_relays"]) -> None: ...

global___EventClaimUpdated = EventClaimUpdated

@typing.final
class EventProofSubmitted(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CLAIM_FIELD_NUMBER: builtins.int
    PROOF_FIELD_NUMBER: builtins.int
    NUM_RELAYS_FIELD_NUMBER: builtins.int
    NUM_CLAIMED_COMPUTE_UNITS_FIELD_NUMBER: builtins.int
    NUM_ESTIMATED_COMPUTE_UNITS_FIELD_NUMBER: builtins.int
    CLAIMED_UPOKT_FIELD_NUMBER: builtins.int
    num_relays: builtins.int
    num_claimed_compute_units: builtins.int
    num_estimated_compute_units: builtins.int
    @property
    def claim(self) -> pocket.proof.types_pb2.Claim: ...
    @property
    def proof(self) -> pocket.proof.types_pb2.Proof: ...
    @property
    def claimed_upokt(self) -> cosmos.base.v1beta1.coin_pb2.Coin: ...
    def __init__(
        self,
        *,
        claim: pocket.proof.types_pb2.Claim | None = ...,
        proof: pocket.proof.types_pb2.Proof | None = ...,
        num_relays: builtins.int = ...,
        num_claimed_compute_units: builtins.int = ...,
        num_estimated_compute_units: builtins.int = ...,
        claimed_upokt: cosmos.base.v1beta1.coin_pb2.Coin | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["claim", b"claim", "claimed_upokt", b"claimed_upokt", "proof", b"proof"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["claim", b"claim", "claimed_upokt", b"claimed_upokt", "num_claimed_compute_units", b"num_claimed_compute_units", "num_estimated_compute_units", b"num_estimated_compute_units", "num_relays", b"num_relays", "proof", b"proof"]) -> None: ...

global___EventProofSubmitted = EventProofSubmitted

@typing.final
class EventProofUpdated(google.protobuf.message.Message):
    """TODO_TEST: Add coverage for proof updates."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CLAIM_FIELD_NUMBER: builtins.int
    PROOF_FIELD_NUMBER: builtins.int
    NUM_RELAYS_FIELD_NUMBER: builtins.int
    NUM_CLAIMED_COMPUTE_UNITS_FIELD_NUMBER: builtins.int
    NUM_ESTIMATED_COMPUTE_UNITS_FIELD_NUMBER: builtins.int
    CLAIMED_UPOKT_FIELD_NUMBER: builtins.int
    num_relays: builtins.int
    num_claimed_compute_units: builtins.int
    num_estimated_compute_units: builtins.int
    @property
    def claim(self) -> pocket.proof.types_pb2.Claim: ...
    @property
    def proof(self) -> pocket.proof.types_pb2.Proof: ...
    @property
    def claimed_upokt(self) -> cosmos.base.v1beta1.coin_pb2.Coin: ...
    def __init__(
        self,
        *,
        claim: pocket.proof.types_pb2.Claim | None = ...,
        proof: pocket.proof.types_pb2.Proof | None = ...,
        num_relays: builtins.int = ...,
        num_claimed_compute_units: builtins.int = ...,
        num_estimated_compute_units: builtins.int = ...,
        claimed_upokt: cosmos.base.v1beta1.coin_pb2.Coin | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["claim", b"claim", "claimed_upokt", b"claimed_upokt", "proof", b"proof"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["claim", b"claim", "claimed_upokt", b"claimed_upokt", "num_claimed_compute_units", b"num_claimed_compute_units", "num_estimated_compute_units", b"num_estimated_compute_units", "num_relays", b"num_relays", "proof", b"proof"]) -> None: ...

global___EventProofUpdated = EventProofUpdated

@typing.final
class EventProofValidityChecked(google.protobuf.message.Message):
    """Event emitted after a proof has been checked for validity in the proof module's
    EndBlocker.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    PROOF_FIELD_NUMBER: builtins.int
    BLOCK_HEIGHT_FIELD_NUMBER: builtins.int
    PROOF_STATUS_FIELD_NUMBER: builtins.int
    FAILURE_REASON_FIELD_NUMBER: builtins.int
    block_height: builtins.int
    proof_status: pocket.proof.types_pb2.ClaimProofStatus.ValueType
    failure_reason: builtins.str
    """reason is the string representation of the error that led to the proof being
    marked as invalid (e.g. "invalid closest merkle proof", "invalid relay request signature")
    """
    @property
    def proof(self) -> pocket.proof.types_pb2.Proof: ...
    def __init__(
        self,
        *,
        proof: pocket.proof.types_pb2.Proof | None = ...,
        block_height: builtins.int = ...,
        proof_status: pocket.proof.types_pb2.ClaimProofStatus.ValueType = ...,
        failure_reason: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["proof", b"proof"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["block_height", b"block_height", "failure_reason", b"failure_reason", "proof", b"proof", "proof_status", b"proof_status"]) -> None: ...

global___EventProofValidityChecked = EventProofValidityChecked
